node {

           stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */

        checkout scm
    }


    stage('compile') {
       def mvn_version = 'Maven'
withEnv( ["PATH+MAVEN=${tool mvn_version}/bin"] ) {
  sh "mvn clean install"
}
    }


    stage('Build image') {
        /* This builds the actual image; synonymous to
         * docker build on the command line */

        app = docker.build("group11")
    }

    stage('Test image') {
        /* Ideally, we would run a test framework against our image.
         * For this example, we're using a Volkswagen-type approach ;-) */

        app.inside {
            sh 'echo "Tests passed"'
        }
    }



    stage('SonarQube analysis') {
    def scannerHome = tool 'SonarQubeScanner';
    withSonarQubeEnv('My SonarQube Server') { // If you have configured more than one global server connection, you can specify its name
      sh "${scannerHome}/bin/sonar-scanner"
    }
  }
  
stage('Deploy to Nexus') {
nexusArtifactUploader artifacts: [
   [artifactId: 'group11', classifier: 'debug', file: '/var/lib/jenkins/workspace/group11/customer-client-service/target/customer-client-service-0.0.1-SNAPSHOT.jar', type: 'jar'], 
   [artifactId: 'group11', classifier: 'debug', file: '/var/lib/jenkins/workspace/group11/customer-interface/target/customer-interface-0.0.1-SNAPSHOT.jar', type: 'jar'],
   [artifactId: 'group11', classifier: 'debug', file: '/var/lib/jenkins/workspace/group11/customer-service/target/customer-service-0.0.1-SNAPSHOT.jar', type:      'jar'],
   [artifactId: 'group11', classifier: 'debug', file: '/var/lib/jenkins/workspace/group11/eureka-server/target/eureka-server-0.0.1-SNAPSHOT.jar', type:'jar'],
        credentialsId: 'nexus-credentials', 
        groupId: 'nexus', 
        nexusUrl: '35.222.57.31:8081', 

        nexusVersion: 'nexus3', 

        protocol: 'http', 

        repository: 'group11', 
]
         }

stage('Push image to Nexus') {
       DOCKER_HOME = tool "docker"
    sh """
       echo $DOCKER_HOME
        ls $DOCKER_HOME/bin/
        docker tag group11  35.222.57.31:8081/group11:1.0
        docker push 35.222.57.31:8081/group11:1.0
    """
    }
}
