node {
  
	   stage('Clone repository') {
        /* Let's make sure we have the repository cloned to our workspace */

        checkout scm
    }
    
        
    stage('compile') {
       def mvn_version = 'Maven'
withEnv( ["PATH+MAVEN=${tool mvn_version}/bin"] ) {
  sh "mvn clean install"
}
    }


stage('Deploy to Nexus') {

      steps {

        nexusArtifactUploader(artifactId: 'my.jar', 

        credentialsId: 'f3105m60-c38c-4cfd-b68f-3f6ecb5e7d60', 

        file: '/var/lib/jenkins/workspace/group11/customer-client-service/target/customer-client-service-0.0.1-SNAPSHOT.jar', 

        groupId: 'nexus', 

        nexusUrl: '35.222.57.31:8081', 

        nexusVersion: 'nexus3', 

        protocol: 'http', 

        repository: 'group11', 

        type: 'war', 

        version: '1.1')

      }

    }


    stage('Test image') {
        /* Ideally, we would run a test framework against our image.
         * For this example, we're using a Volkswagen-type approach ;-) */

        app.inside {
            sh 'echo "Tests passed"'
        }
    }
    

    
    stage('SonarQube analysis') {
    def scannerHome = tool 'SonarQubeScanner';
    withSonarQubeEnv('My SonarQube Server') { // If you have configured more than one global server connection, you can specify its name
      sh "${scannerHome}/bin/sonar-scanner"
    }
  }
  
   
    stage('Push image to Nexus') {
       DOCKER_HOME = tool "docker"
    sh """ 
       echo $DOCKER_HOME
        ls $DOCKER_HOME/bin/
        docker tag sukumartcs/group11  35.222.57.31:8081/group11:mytag
        docker push 35.222.57.31:8081/group11:mytag
    """
    }
}
